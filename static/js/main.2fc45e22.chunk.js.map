{"version":3,"sources":["components/Header.js","actions/index.js","components/AddSongForm.js","containers/AddSong.js","components/ButtonsBar.js","components/PlaylistHeader.js","components/Song.js","containers/Playlist.js","containers/AboutMe.js","App.js","reducers/songs.js","reducers/sortingMethod.js","reducers/filterMethod.js","reducers/incrementIdReducer.js","reducers/route.js","reducers/index.js","index.js"],"names":["Header","change_route","value","type","payload","AddSongForm","props","onSubmit","handleSubmit","placeholder","name","required","AddSong","dispatch","useDispatch","nextID","useSelector","state","incrementID","className","event","preventDefault","genre","rating","title","target","artist","link","id","clearForm","ButtonsBar","onChange","handleSort","handleFilter","onClick","changeRoute","PlaylistHeader","Song","song","href","rel","handleDelete","icon","faTrash","Playlist","songs","sortingMethod","filters","filter","delete_song","mappedSongs","length","includes","sort","a","b","toUpperCase","map","checked","AboutMe","App","route","songsReducer","action","newState","sortingMethodReducer","filterMethodReducer","item","incrementIdReducer","routeReducer","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAQeA,G,MARA,WACX,OACI,iCACI,oDCiCCC,EAAe,SAACC,GACzB,MAAO,CACHC,KAAM,eACNC,QAASF,ICFFG,EArCK,SAACC,GACjB,OACI,8BACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,uBAAOL,KAAK,OAAOM,YAAY,aAAaC,KAAK,QAAQC,UAAQ,IACjE,uBAAOR,KAAK,OAAOM,YAAY,SAASC,KAAK,SAASC,UAAQ,IAE9D,yBACID,KAAK,QADT,UAGI,wBAAQR,MAAM,OAAd,8BACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,wBAGJ,yBACIQ,KAAK,SADT,UAGI,wBAAQR,MAAM,OAAd,+BACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,kBAGJ,uBAAOC,KAAK,MAAMM,YAAY,eAAeC,KAAK,SAElD,oDC8BDE,EAzDC,WACZ,IAAMC,EAAWC,cACXC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAgD1C,OACI,qBAAKC,UAAU,WAAf,SACI,cAAC,EAAD,CAAaX,aAxCA,SAACY,GAClBA,EAAMC,iBAEN,IAGIC,EAOAC,EAVEC,EAAQJ,EAAMK,OAAO,GAAGvB,MACxBwB,EAASN,EAAMK,OAAO,GAAGvB,MAI3BoB,EADyB,SAA1BF,EAAMK,OAAO,GAAGvB,MACP,GAEAkB,EAAMK,OAAO,GAAGvB,MAKxBqB,EADyB,SAA1BH,EAAMK,OAAO,GAAGvB,MACN,GAEAkB,EAAMK,OAAO,GAAGvB,MAG7B,IAAMyB,EAAOP,EAAMK,OAAO,GAAGvB,MAE7BW,EFrCG,CACHV,KAAM,WACNC,QEoCI,CACIwB,GAAIb,EACJS,MAAOA,EACPE,OAAQA,EACRJ,MAAOA,EACPC,OAAQA,EACRI,KAAMA,KAIdd,EFnBG,CACHV,KAAM,eACNC,QAAS,IExBK,SAACgB,GACfA,EAAMK,OAAO,GAAGvB,MAAQ,GACxBkB,EAAMK,OAAO,GAAGvB,MAAQ,GACxBkB,EAAMK,OAAO,GAAGvB,MAAQ,OACxBkB,EAAMK,OAAO,GAAGvB,MAAQ,OACxBkB,EAAMK,OAAO,GAAGvB,MAAQ,GAsCxB2B,CAAUT,SCpBHU,EA7BI,SAACxB,GAChB,OACI,sBAAKa,UAAU,aAAf,UACI,6CAEI,yBAAQT,KAAK,OAAOqB,SAAUzB,EAAM0B,WAApC,UACI,wBAAQ9B,MAAM,OAAd,0BACA,wBAAQA,MAAM,SAAd,0BACA,wBAAQA,MAAM,UAAd,4BACA,wBAAQA,MAAM,UAAd,4BACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,iBAAd,gCACA,wBAAQA,MAAM,iBAAd,sCAGR,wBAAOiB,UAAU,UAAjB,0BAEI,uBAAOhB,KAAK,WAAW4B,SAAUzB,EAAM2B,aAAc/B,MAAM,QAF/D,MAGI,uBAAOC,KAAK,WAAW4B,SAAUzB,EAAM2B,aAAc/B,MAAM,SAH/D,OAII,uBAAOC,KAAK,WAAW4B,SAAUzB,EAAM2B,aAAc/B,MAAM,UAJ/D,QAKI,uBAAOC,KAAK,WAAW4B,SAAUzB,EAAM2B,aAAc/B,MAAM,SAL/D,OAMI,uBAAOC,KAAK,WAAW4B,SAAUzB,EAAM2B,aAAc/B,MAAM,WAN/D,aAQC,wBAAQgC,QAAS5B,EAAM6B,YAAvB,0BCXEC,EAfQ,WACnB,OACQ,gCACI,+BACI,uCACA,wCACA,uCACA,wCACA,sCACA,6B,gBCaLC,EAnBF,SAAC/B,GACV,IAAMgC,EAAOhC,EAAMgC,KAEnB,OACI,+BACI,6BAAKA,EAAKd,QACV,6BAAKc,EAAKZ,SACV,6BAAKY,EAAKhB,MAAQgB,EAAKhB,MAAQ,KAC/B,6BAAKgB,EAAKf,OAASe,EAAKf,OAAS,KACjC,6BAAKe,EAAKX,KAAO,mBAAGY,KAAMD,EAAKX,KAAMF,OAAO,SAASe,IAAI,aAAxC,wBAAsE,KACvF,oBAAIN,QACA,kBAAM5B,EAAMmC,aAAaH,EAAKV,KADlC,SAGI,cAAC,IAAD,CAAiBc,KAAMC,YCsFxBC,EAhGE,WACb,IAAM/B,EAAWC,cACX+B,EAAQ7B,aAAY,SAAAC,GAAK,OAAIA,EAAM4B,SACnCC,EAAgB9B,aAAY,SAAAC,GAAK,OAAIA,EAAM6B,iBAC3CC,EAAU/B,aAAY,SAAAC,GAAK,OAAIA,EAAM+B,UAErCP,EAAe,SAACb,GAClBf,ENNmB,SAACe,GACxB,MAAO,CACHzB,KAAM,cACNC,QAASwB,GMGAqB,CAAYrB,KAenBsB,EAAcL,EAAMG,QAAO,SAACV,GAC9B,OAAsB,IAAnBS,EAAQI,QAIPJ,EAAQK,SAASd,EAAKhB,OAHfgB,OAGX,KAGDe,MAAK,SAACC,EAAGC,GACR,OAAOT,GACH,IAAK,OACD,OAAOQ,EAAE1B,GAAK2B,EAAE3B,GACpB,IAAK,SACD,OAAO2B,EAAE3B,GAAK0B,EAAE1B,GACpB,IAAK,UACD,OAAO0B,EAAE9B,MAAMgC,gBAAkBD,EAAE/B,MAAMgC,cACnC,EACAF,EAAE9B,MAAMgC,cAAgBD,EAAE/B,MAAMgC,cAChC,GACC,EACX,IAAK,UACD,OAAOD,EAAE/B,MAAMgC,gBAAkBF,EAAE9B,MAAMgC,cACnC,EACAD,EAAE/B,MAAMgC,cAAgBF,EAAE9B,MAAMgC,cAChC,GACC,EACX,IAAK,YACD,OAAOF,EAAE5B,OAAO8B,gBAAkBD,EAAE7B,OAAO8B,cACrC,EACAF,EAAE5B,OAAO8B,cAAgBD,EAAE7B,OAAO8B,cAClC,GACC,EACX,IAAK,YACD,OAAOD,EAAE7B,OAAO8B,gBAAkBF,EAAE5B,OAAO8B,cACrC,EACAD,EAAE7B,OAAO8B,cAAgBF,EAAE5B,OAAO8B,cAClC,GACC,EACX,IAAK,iBACD,OAAOF,EAAE/B,OAASgC,EAAEhC,OACxB,IAAK,iBACD,OAAOgC,EAAEhC,OAAS+B,EAAE/B,OACxB,QACI,OAAO+B,EAAE1B,GAAK2B,EAAE3B,OAEzB6B,KAAI,SAACnB,GACJ,OAAO,cAAC,EAAD,CACHA,KAAMA,EAENG,aAAcA,GADTH,EAAKV,OAKlB,OACI,gCACK,cAAC,EAAD,CACGI,WApEO,SAACZ,GAChBP,ENFG,CACHV,KAAM,aACNC,QMAoBgB,EAAMK,OAAOvB,SAoEzB+B,aAjES,SAACb,GNCE,IAAClB,EAAOwD,EMA5B7C,GNAqBX,EMACkB,EAAMK,OAAOvB,MNAPwD,EMActC,EAAMK,OAAOiC,QNCpD,CACHvD,KAAM,eACNC,QAASF,EACTwD,QAASA,MM6DDvB,YA9DQ,WAChBtB,EAASZ,EAAa,gBAgEjB,qBAAKkB,UAAU,qBAAf,SACG,kCACA,cAAC,EAAD,IACI,gCACK+B,aC/DVS,EA3BC,WACZ,IAAM9C,EAAWC,cAMjB,OACI,sBAAKK,UAAU,qBAAf,UACI,sBAAKA,UAAU,SAAf,ykBAMI,uBACA,uBAPJ,kDAWA,qBAAKA,UAAU,SAAf,SACI,wBAAQe,QAlBA,WAChBrB,EAASZ,EAAa,cAiBd,2BCMD2D,MAvBf,WACI,IAAMC,EAAQ7C,aAAY,SAAAC,GAAK,OAAIA,EAAM4C,SAEzC,OACI,sBAAK1C,UAAU,YAAf,UACI,cAAC,EAAD,IAEA,+BACgB,aAAV0C,EAEE,gCACI,cAAC,EAAD,IAEA,cAAC,EAAD,OAGJ,cAAC,EAAD,U,cCRLC,EAfM,WAAyB,IAAxB7C,EAAuB,uDAAf,GAAI8C,EAAW,uCACzC,OAAOA,EAAO5D,MACV,IAAK,WACD,MAAM,GAAN,mBAAYc,GAAZ,CAAmB8C,EAAO3D,UAC9B,IAAK,cACD,IAAM4D,EAAW/C,EAAM+B,QAAO,SAACV,GAC3B,OAAOA,EAAKV,KAAOmC,EAAO3D,WAG9B,OAAO4D,EACX,QACI,OAAO/C,ICFJgD,EATc,WAA6B,IAA5BhD,EAA2B,uDAAnB,OAAQ8C,EAAW,uCACrD,OAAOA,EAAO5D,MACV,IAAK,aACD,OAAgB4D,EAAO3D,QAC3B,QACI,OAAOa,ICYJiD,EAjBa,WAAyB,IAAxBjD,EAAuB,uDAAf,GAAI8C,EAAW,uCAChD,OAAOA,EAAO5D,MACV,IAAK,eACD,GAAG4D,EAAOL,QACN,MAAM,GAAN,mBAAWzC,GAAX,CAAkB8C,EAAO3D,UAG7B,IAAM4D,EAAW/C,EAAM+B,QAAO,SAACmB,GAC3B,OAAOA,IAASJ,EAAO3D,WAG3B,OAAO4D,EACX,QACI,OAAO/C,ICJJmD,EATY,WAAwB,IAAvBnD,EAAsB,uDAAd,EAAG8C,EAAW,uCAC9C,OAAOA,EAAO5D,MACV,IAAK,eACD,OAAec,EAAQ8C,EAAO3D,QAClC,QACI,OAAOa,ICIJoD,EATM,WAAiC,IAAhCpD,EAA+B,uDAAvB,WAAY8C,EAAW,uCACjD,OAAOA,EAAO5D,MACV,IAAK,eACD,OAAgB4D,EAAO3D,QAC3B,QACI,OAAOa,ICUJqD,EARKC,YAAgB,CAChC1B,MAAOiB,EACPhB,cAAemB,EACfjB,OAAQkB,EACRhD,YAAakD,EACbP,MAAOQ,ICLLG,EAAQC,YACVH,EACAI,OAAOC,8BAAgCD,OAAOC,gCAKlDC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRO,SAASC,eAAe,W","file":"static/js/main.2fc45e22.chunk.js","sourcesContent":["const Header = () => {\r\n    return (\r\n        <header>\r\n            <h3>Song Saver SPA</h3>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","export const add_song = (song) => {\r\n    return {\r\n        type: \"ADD_SONG\",\r\n        payload: song\r\n    };\r\n};\r\n\r\nexport const delete_song = (id) => {\r\n    return {\r\n        type: \"DELETE_SONG\",\r\n        payload: id\r\n    };\r\n};\r\n\r\nexport const sort_songs = (value) => {\r\n    return {\r\n        type: \"SORT_SONGS\",\r\n        payload: value\r\n    };\r\n};\r\n\r\nexport const filter_songs = (value, checked) => {\r\n    return {\r\n        type: \"FILTER_SONGS\",\r\n        payload: value,\r\n        checked: checked\r\n    };\r\n};\r\n\r\nexport const increment_id = () => {\r\n    return {\r\n        type: \"INCREMENT_ID\",\r\n        payload: 1\r\n    };\r\n};\r\n\r\nexport const change_route = (value) => {\r\n    return {\r\n        type: \"CHANGE_ROUTE\",\r\n        payload: value\r\n    };\r\n};","const AddSongForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Song Title\" name=\"title\" required/>\r\n                <input type=\"text\" placeholder=\"Artist\" name=\"artist\" required/>\r\n\r\n                <select\r\n                    name=\"genre\"\r\n                >\r\n                    <option value=\"none\">- Select Genre -</option>\r\n                    <option value=\"Pop\">Pop</option>\r\n                    <option value=\"Rock\">Rock</option>\r\n                    <option value=\"Blues\">Blues</option>\r\n                    <option value=\"Jazz\">Jazz</option>\r\n                    <option value=\"Hiphop\">Hip Hop</option>\r\n                </select>\r\n\r\n                <select\r\n                    name=\"rating\"\r\n                >\r\n                    <option value=\"none\">- Select Rating -</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </select>\r\n\r\n                <input type=\"url\" placeholder=\"Youtube Link\" name=\"link\" />\r\n                \r\n                <button>Add Song</button>\r\n            </form>\r\n        </div>\r\n    ); \r\n};\r\n\r\nexport default AddSongForm;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { add_song, increment_id } from '../actions';\r\nimport AddSongForm from '../components/AddSongForm';\r\n\r\nconst AddSong = () => {\r\n    const dispatch = useDispatch();\r\n    const nextID = useSelector(state => state.incrementID);\r\n\r\n    const clearForm = (event) => {\r\n        event.target[0].value = '';\r\n        event.target[1].value = '';\r\n        event.target[2].value = 'none';\r\n        event.target[3].value = 'none';\r\n        event.target[4].value = '';\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const title = event.target[0].value;\r\n        const artist = event.target[1].value;\r\n\r\n        let genre;\r\n        if(event.target[2].value === 'none') {\r\n            genre = ''\r\n        } else {\r\n            genre = event.target[2].value\r\n        };\r\n         \r\n        let rating;\r\n        if(event.target[3].value === 'none') {\r\n            rating = ''\r\n        } else {\r\n            rating = event.target[3].value\r\n        };\r\n\r\n        const link = event.target[4].value;\r\n\r\n        dispatch(add_song(\r\n            {\r\n                id: nextID,\r\n                title: title,\r\n                artist: artist,\r\n                genre: genre,\r\n                rating: rating,\r\n                link: link\r\n            }\r\n        ));\r\n\r\n        dispatch(increment_id());\r\n\r\n        clearForm(event);    \r\n    };\r\n\r\n    return (\r\n        <div className=\"add-song\">\r\n            <AddSongForm handleSubmit={handleSubmit}/>\r\n        </div>  \r\n    );\r\n};\r\n\r\nexport default AddSong;","\r\n\r\nconst ButtonsBar = (props) => {\r\n    return(\r\n        <div className=\"buttonsbar\">\r\n            <label>\r\n                Sort By:\r\n                <select name=\"sort\" onChange={props.handleSort}>\r\n                    <option value=\"none\">Oldest first</option>\r\n                    <option value=\"latest\">Latest first</option>\r\n                    <option value=\"song-az\">Song Title A-Z</option>\r\n                    <option value=\"song-za\">Song Title Z-A</option>\r\n                    <option value=\"artist-az\">Artist A-Z</option>\r\n                    <option value=\"artist-za\">Artist Z-A</option>\r\n                    <option value=\"rating-highlow\">Rating High to Low</option>\r\n                    <option value=\"rating-lowhigh\">Rating Low To High</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"filters\">\r\n                Only Show Me:\r\n                <input type=\"checkbox\" onChange={props.handleFilter} value=\"Pop\"></input>Pop\r\n                <input type=\"checkbox\" onChange={props.handleFilter} value=\"Rock\"></input>Rock\r\n                <input type=\"checkbox\" onChange={props.handleFilter} value=\"Blues\"></input>Blues\r\n                <input type=\"checkbox\" onChange={props.handleFilter} value=\"Jazz\"></input>Jazz\r\n                <input type=\"checkbox\" onChange={props.handleFilter} value=\"Hiphop\"></input>Hip Hop\r\n            </label>\r\n             <button onClick={props.changeRoute}>About Me</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ButtonsBar;","const PlaylistHeader = () => {\r\n    return (\r\n            <thead>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Artist</th>\r\n                    <th>Genre</th>\r\n                    <th>Rating</th>\r\n                    <th>Link</th>\r\n                    <th></th>\r\n                </tr> \r\n            </thead>\r\n    );\r\n};\r\n\r\nexport default PlaylistHeader;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Song = (props) => {\r\n    const song = props.song;\r\n\r\n    return (\r\n        <tr>\r\n            <td>{song.title}</td>\r\n            <td>{song.artist}</td>\r\n            <td>{song.genre ? song.genre : ''}</td>\r\n            <td>{song.rating ? song.rating : ''}</td>\r\n            <td>{song.link ? <a href={song.link} target=\"_blank\" rel=\"noreferrer\">Click Here</a> : ''}</td>\r\n            <td onClick={\r\n                () => props.handleDelete(song.id)\r\n            }>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Song;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { delete_song, sort_songs, filter_songs, change_route} from '../actions';\r\nimport ButtonsBar from '../components/ButtonsBar';\r\nimport PlaylistHeader from '../components/PlaylistHeader';\r\nimport Song from '../components/Song';\r\n\r\nconst Playlist = () => {\r\n    const dispatch = useDispatch();\r\n    const songs = useSelector(state => state.songs);\r\n    const sortingMethod = useSelector(state => state.sortingMethod);\r\n    const filters = useSelector(state => state.filter);\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(delete_song(id));\r\n    };\r\n\r\n    const handleSort = (event) => {\r\n        dispatch(sort_songs(event.target.value));\r\n    };\r\n\r\n    const handleFilter = (event) => {\r\n        dispatch(filter_songs(event.target.value, event.target.checked));\r\n    };\r\n\r\n    const changeRoute = () => {\r\n        dispatch(change_route('about-me'));\r\n    };\r\n\r\n    const mappedSongs = songs.filter((song) => { // Filter by the filters currently in state\r\n        if(filters.length === 0) {\r\n            return song;\r\n        };\r\n\r\n        if (filters.includes(song.genre)) {\r\n            return song;\r\n        };\r\n    }).sort((a, b) => { // Sort by the given sorting method\r\n        switch(sortingMethod) {\r\n            case 'none':\r\n                return a.id - b.id;\r\n            case 'latest':\r\n                return b.id - a.id;\r\n            case 'song-az':\r\n                return a.title.toUpperCase() === b.title.toUpperCase() \r\n                    ? 0 \r\n                    : a.title.toUpperCase() > b.title.toUpperCase() \r\n                    ? 1 \r\n                    : -1;\r\n            case 'song-za':\r\n                return b.title.toUpperCase() === a.title.toUpperCase() \r\n                    ? 0 \r\n                    : b.title.toUpperCase() > a.title.toUpperCase() \r\n                    ? 1 \r\n                    : -1;\r\n            case 'artist-az':\r\n                return a.artist.toUpperCase() === b.artist.toUpperCase() \r\n                    ? 0 \r\n                    : a.artist.toUpperCase() > b.artist.toUpperCase() \r\n                    ? 1 \r\n                    : -1;\r\n            case 'artist-za':\r\n                return b.artist.toUpperCase() === a.artist.toUpperCase() \r\n                    ? 0 \r\n                    : b.artist.toUpperCase() > a.artist.toUpperCase() \r\n                    ? 1 \r\n                    : -1;\r\n            case 'rating-lowhigh':\r\n                return a.rating - b.rating;\r\n            case 'rating-highlow':\r\n                return b.rating - a.rating;\r\n            default :\r\n                return a.id - b.id;   \r\n        };\r\n    }).map((song) => { // Map to individual components\r\n        return <Song \r\n            song={song} \r\n            key={song.id} \r\n            handleDelete={handleDelete}\r\n        />\r\n    });;\r\n\r\n    return(\r\n        <div>\r\n             <ButtonsBar \r\n                handleSort={handleSort} \r\n                handleFilter={handleFilter}\r\n                changeRoute={changeRoute}\r\n            />\r\n\r\n             <div className=\"playlist-container\">\r\n                <table>\r\n                <PlaylistHeader />\r\n                    <tbody>\r\n                        {mappedSongs}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Playlist;","import { useDispatch } from 'react-redux';\r\nimport { change_route } from '../actions';\r\n\r\nconst AboutMe = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const changeRoute = () => {\r\n        dispatch(change_route('playlist'));\r\n    };\r\n\r\n    return (\r\n        <div className=\"about-me-container\">\r\n            <div className=\"center\">\r\n                Hello party people! My name is Thom and this is one of the last assignments in the Front-End course at Winc Academy.\r\n                It is a little playlist project where you can add your own songs, catagorize them and rate them. You can also add\r\n                links to Youtube if you get the urge to listen to them right away. Unfortunatly it resets every time you reload \r\n                the page, but maybe we will revisit this project later to add a Back-End. Why not! When testing this out, I'd be\r\n                very dissapointed if you do not add some Rammstein, Atmosphere or Leprous. Anyway, have a nice day / week / weekend!\r\n                <br />\r\n                <br />\r\n                Made by Thom for Winc Academy, January 2021.\r\n            </div>\r\n            \r\n            <div className=\"center\">\r\n                <button onClick={changeRoute}>Go Back</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutMe;","import { useSelector } from 'react-redux';\r\nimport './styles/styles.css';\r\nimport Header from './components/Header';\r\nimport AddSong from './containers/AddSong';\r\nimport Playlist from './containers/Playlist';\r\nimport AboutMe from './containers/AboutMe';\r\n\r\nfunction App() {\r\n    const route = useSelector(state => state.route);\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <Header />\r\n            \r\n            <main>\r\n                { route === 'playlist' \r\n                ?   \r\n                    <div>\r\n                        <AddSong />\r\n                        \r\n                        <Playlist />\r\n                    </div>\r\n                :\r\n                    <AboutMe />\r\n                }  \r\n            </main> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","const songsReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"ADD_SONG\" :\r\n            return  [...state, action.payload];\r\n        case \"DELETE_SONG\" :\r\n            const newState = state.filter((song) => {\r\n                return song.id !== action.payload;\r\n            });\r\n\r\n            return newState;\r\n        default :\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport default songsReducer;\r\n\r\n/*\r\n    State is an array of songs. Each song is a seperate object.\r\n    Add song simply adds the new song at the end of the array.\r\n\r\n    Delete song filters over all the songs and leaves out the song with the given ID.\r\n*/","const sortingMethodReducer = (state = 'none', action) => {\r\n    switch(action.type) {\r\n        case \"SORT_SONGS\" :\r\n            return  state = action.payload;\r\n        default :\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport default sortingMethodReducer;\r\n\r\n/*\r\n    Each sorting method has a unique name. Which is set to state.\r\n    Playlist.js retrieves the sorting method and sorts accordingly.\r\n*/","const filterMethodReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"FILTER_SONGS\" :\r\n            if(action.checked) {\r\n                return [...state, action.payload];\r\n            };\r\n\r\n            const newState = state.filter((item) => {\r\n                return item !== action.payload;\r\n            });\r\n\r\n            return newState;\r\n        default :\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport default filterMethodReducer;\r\n\r\n/*\r\n    First a check if the box is checked. If so, it adds the filter to the state. \r\n    The state is an array of filters.\r\n\r\n    If the checkbox is not checked, the filter is removed from state.\r\n*/","const incrementIdReducer = (state = 1, action) => {\r\n    switch(action.type) {\r\n        case \"INCREMENT_ID\":\r\n            return state = state + action.payload;\r\n        default :\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport default incrementIdReducer;\r\n\r\n/*\r\n    Imitating a database, the ID will be incremented with every entry. This way there\r\n    will be no overlapping ID's.\r\n*/","const routeReducer = (state = 'playlist', action) => {\r\n    switch(action.type) {\r\n        case \"CHANGE_ROUTE\" :\r\n            return  state = action.payload;\r\n        default :\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport default routeReducer;\r\n\r\n/*\r\n    Changes the route to render in App.js\r\n*/","import { combineReducers } from 'redux';\r\nimport songsReducer from './songs';\r\nimport sortingMethodReducer from './sortingMethod';\r\nimport filterMethodReducer from './filterMethod';\r\nimport incrementIdReducer from './incrementIdReducer';\r\nimport routeReducer from './route';\r\n\r\nconst allReducers = combineReducers({\r\n    songs: songsReducer,\r\n    sortingMethod: sortingMethodReducer,\r\n    filter: filterMethodReducer,\r\n    incrementID: incrementIdReducer,\r\n    route: routeReducer,\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport allReducers from './reducers';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}